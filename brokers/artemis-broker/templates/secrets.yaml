{{- if .Values.security.createSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ tpl .Values.templates.app_secret .}}
type: Opaque
data:
  AMQ_USER: {{ b64enc .Values.admin.user }}
  AMQ_PASSWORD: {{ b64enc .Values.admin.password }}
  {{- if .Values.clustered }}
  AMQ_CLUSTER_USER: {{ b64enc .Values.admin.cluster_user }}
  AMQ_CLUSTER_PASSWORD: {{ b64enc .Values.admin.cluster_password }}
  {{- end }}
{{- end }}
{{- if .Values.parameters.tls_enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ tpl .Values.templates.app_certificates . }}
type: Opaque
data:
  AMQ_KEYSTORE_PASSWORD: {{ b64enc .Values.tls.keystore_password }}
  AMQ_TRUSTSTORE_PASSWORD: {{ b64enc .Values.tls.truststore_password }}
  {{- range tuple .Values.tls.keystore .Values.tls.truststore }}
  {{ . }}: |-
    {{ ( printf "%s%s" "tls/" . | $.Files.Get ) | b64enc }}
  {{- end }}
{{- end }}
{{- if and (eq .Values.platform "kubernetes") (.Values.ingress.console.tls) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.ingress.console.tlsSecretName }}
data:
  tls.crt: |-
    {{ ( printf "%s%s" "tls/" .Values.ingress.console.cert | $.Files.Get) | b64enc }}
  tls.key: |-
    {{ ( printf "%s%s" "tls/" .Values.ingress.console.key | $.Files.Get) | b64enc }}
type: kubernetes.io/tls
{{- end }}
